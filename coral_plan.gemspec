# Generated by jeweler
# DO NOT EDIT THIS FILE DIRECTLY
# Instead, edit Jeweler::Tasks in Rakefile, and run 'rake gemspec'
# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = "coral_plan"
  s.version = "0.1.1"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["Adrian Webb"]
  s.date = "2013-02-08"
  s.description = "= coral_plan\n\nThis library provides the ability to create, load, execute, and save \nexecution plans.\n\nThe Coral Plan library contains a system that defines execution plans of \nCLI commands.  The goal is to make it easy to create, edit, load, execute,\nand save these plans in a machine readable format (ie; JSON).  The system \nis composed of Events, Commands, Actions, and of course Plans. There are a\nfew simple rules:\n    \n1. All plans begin with a Command but may have more Commands defined\n   that act in sequence unless there are errors with previous commands.\n    \n2. Commands can trigger Events of various types, where Events are reading\n   and checking (ie; Regular expressions) Command output line by line.\n       \n3. Events have different criteria for measuring success and will have \n   different fields.  For example, a Regexp event contains a 'pattern'\n   field.\n       \n4. Actions listen for Events and run Commands, with the ability to override\n   default Command parameters.  Actions may also generate Events on either\n   successful execution or failure which can trigger other Actions.\n       \nNote:  This library is still very early in development!\n\n== Contributing to coral_plan\n \n* Check out the latest master to make sure the feature hasn't been implemented \n  or the bug hasn't been fixed yet.\n* Check out the issue tracker to make sure someone already hasn't requested \n  it and/or contributed it.\n* Fork the project.\n* Start a feature/bugfix branch.\n* Commit and push until you are happy with your contribution.\n* Make sure to add tests for it. This is important so I don't break it in a \n  future version unintentionally.\n* Please try not to mess with the Rakefile, version, or history. If you want \n  to have your own version, or is otherwise necessary, that is fine, but \n  please isolate to its own commit so I can cherry-pick around it.\n\n== Copyright\n\nLicensed under GPLv3.  See LICENSE.txt for further details.\n\nCopyright (c) 2013  Adrian Webb <adrian.webb@coraltech.net>\nCoral Technology Group LLC"
  s.email = "adrian.webb@coraltech.net"
  s.extra_rdoc_files = [
    "LICENSE.txt",
    "README.rdoc"
  ]
  s.files = [
    ".document",
    "Gemfile",
    "Gemfile.lock",
    "LICENSE.txt",
    "README.rdoc",
    "Rakefile",
    "VERSION",
    "lib/coral_plan.rb",
    "lib/coral_plan/action.rb",
    "lib/coral_plan/base.rb",
    "lib/coral_plan/command.rb",
    "lib/coral_plan/event.rb"
  ]
  s.homepage = "http://github.com/coraltech/ruby-coral_plan"
  s.licenses = ["GPLv3"]
  s.rdoc_options = ["--title", "Coral Execution Plan library", "--main", "README.rdoc", "--line-numbers"]
  s.require_paths = ["lib"]
  s.required_ruby_version = Gem::Requirement.new(">= 1.8.1")
  s.rubyforge_project = "coral_plan"
  s.rubygems_version = "1.8.15"
  s.summary = "Provides the ability to create, load, execute, and save execution plans"

  if s.respond_to? :specification_version then
    s.specification_version = 3

    if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then
      s.add_runtime_dependency(%q<coral_core>, ["~> 0.1"])
      s.add_development_dependency(%q<bundler>, ["~> 1.2"])
      s.add_development_dependency(%q<jeweler>, ["~> 1.8"])
      s.add_development_dependency(%q<rspec>, ["~> 2.10"])
      s.add_development_dependency(%q<rdoc>, ["~> 3.12"])
      s.add_development_dependency(%q<yard>, ["~> 0.8"])
    else
      s.add_dependency(%q<coral_core>, ["~> 0.1"])
      s.add_dependency(%q<bundler>, ["~> 1.2"])
      s.add_dependency(%q<jeweler>, ["~> 1.8"])
      s.add_dependency(%q<rspec>, ["~> 2.10"])
      s.add_dependency(%q<rdoc>, ["~> 3.12"])
      s.add_dependency(%q<yard>, ["~> 0.8"])
    end
  else
    s.add_dependency(%q<coral_core>, ["~> 0.1"])
    s.add_dependency(%q<bundler>, ["~> 1.2"])
    s.add_dependency(%q<jeweler>, ["~> 1.8"])
    s.add_dependency(%q<rspec>, ["~> 2.10"])
    s.add_dependency(%q<rdoc>, ["~> 3.12"])
    s.add_dependency(%q<yard>, ["~> 0.8"])
  end
end

